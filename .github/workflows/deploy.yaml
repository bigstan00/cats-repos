name: Deploy Cats App to Minikube

on:
  push:
    branches: [master]
    tags: ['v*']
  workflow_dispatch:
    inputs:
      revision:
        description: 'Deployment revision number for rollback'
        required: false
        type: number
        default: 0

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.revision && format('deploy-{0}', github.event.inputs.revision) || github.ref }}

    - name: Verify required files
      run: |
        echo "🔍 Checking repository structure..."
        ls -la
        if [ ! -f "Dockerfile" ]; then
          echo "::error::❌ Dockerfile not found in root directory"
          exit 1
        fi
        if [ ! -d "k8s" ]; then
          echo "::error::❌ k8s directory not found"
          exit 1
        fi
        echo "✅ All required files present"
    - name: Set up Minikube
      uses: medyagh/setup-minikube@latest
      with:
        kubernetes-version: '1.28.0'
        driver: docker
        cpus: 4
        memory: 8g
        wait-timeout: 5m

    - name: Start Minikube with required addons
      run: |
        echo "🚀 Starting Minikube cluster..."
        minikube start
        minikube addons enable registry
        minikube addons enable metrics-server
        minikube status
    - name: Configure Docker environment
      run: |
        echo "🐳 Configuring Docker to use Minikube's daemon..."
        eval $(minikube -p minikube docker-env)
        docker info | grep "Docker Root Dir"
    - name: Build and push Docker image
      run: |
        eval $(minikube -p minikube docker-env)
        echo "🏗️ Building Docker image..."
        docker build -t cats-app:${{ github.sha }} .
        docker tag cats-app:${{ github.sha }} localhost:5000/cats-app:${{ github.sha }}
        docker push localhost:5000/cats-app:${{ github.sha }}
        echo "✅ Image built and pushed: localhost:5000/cats-app:${{ github.sha }}"
    - name: Deploy Kubernetes resources
      run: |
        echo "⚙️ Applying Kubernetes manifests..."
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/svc.yaml
        kubectl apply -f k8s/hpa.yaml
        kubectl apply -f k8s/pdb.yaml
        echo "🔄 Updating deployment image..."
        kubectl set image deployment/cats-app cats-app=localhost:5000/cats-app:${{ github.sha }} --record
        kubectl rollout status deployment/cats-app --timeout=300s
        echo "✅ Deployment complete"
    - name: Verify deployment
      run: |
        echo "📊 Deployment status:"
        kubectl get deployments -o wide
        echo ""
        echo "🐳 Pod status:"
        kubectl get pods -o wide --selector=app=cats-app
        echo ""
        echo "🔌 Service status:"
        kubectl get svc cats-service -o wide
        echo ""
        echo "🌐 Access URLs:"
        minikube service cats-service --url || echo "::warning::Service URL not available"
        echo ""
        echo "📈 Horizontal Pod Autoscaler status:"
        kubectl get hpa -o wide || true
    - name: Rollback if requested
      if: ${{ github.event.inputs.revision != 0 }}
      run: |
        echo "⏪ Starting rollback to revision ${{ github.event.inputs.revision }}"
        if ! kubectl rollout undo deployment/cats-app --to-revision=${{ github.event.inputs.revision }}; then
          echo "::error::Failed to rollback to revision ${{ github.event.inputs.revision }}"
          exit 1
        fi
        
        echo "🔄 Verifying rollback status..."
        kubectl rollout status deployment/cats-app --timeout=300s
        echo "✅ Rollback complete"
        
        echo "📜 Updated deployment history:"
        kubectl rollout history deployment/cats-app