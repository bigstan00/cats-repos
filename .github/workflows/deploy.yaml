# name: Deploy Cats App to Minikube

# on:
#   push:
#     branches:
#       - master
#     tags:
#       - 'v*'
#   workflow_dispatch:

# jobs:
#   deploy:
#     runs-on: self-hosted

#     steps:
#     - name: Checkout repository
#       uses: actions/checkout@v2

#     - name: Set up kubectl
#       run: |
#         KUBEVERSION=$(curl -sSL https://dl.k8s.io/release/stable.txt)
#         echo "Using Kubernetes version: $KUBEVERSION"
#         curl -LO "https://dl.k8s.io/release/${KUBEVERSION}/bin/linux/amd64/kubectl"
#         chmod +x kubectl
#         sudo mv kubectl /usr/local/bin/
#         kubectl version --client

#     - name: Build Docker image
#       run: |
#         docker build -t bigstan00/cats:${{ github.sha }} .
#         docker push bigstan00/cats:${{ github.sha }}

#     - name: Deploy to Minikube
#       run: |
#         kubectl set image deployment/cats-app cats=bigstan00/cats:${{ github.sha }}
#         kubectl rollout status deployment/cats-app

#     - name: Expose service if not already exposed
#       run: |
#         if ! kubectl get svc cats-app; then
#           kubectl expose deployment cats-app --port=80 --target-port=8000 --type=NodePort
#         fi

#     - name: Verify Deployment
#       run: |
#         kubectl get pods
#         kubectl get svc


name: Deploy Cats App to Minikube

on:
  push:
    branches: [ master ]
    tags: [ 'v*' ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Minikube
      uses: medyagh/setup-minikube@latest
      with:
        kubernetes-version: '1.28.0'
        driver: docker
        cpus: 4
        memory: 8g

    - name: Start Minikube with registry
      run: |
        minikube start
        minikube addons enable registry
        minikube addons enable metrics-server

    - name: Build and push Docker image
      run: |
        eval $(minikube -p minikube docker-env)
        cd /home/user/cats/Dockerfile
        docker build -t cats-app:${{ github.sha }} .
        docker tag cats-app:${{ github.sha }} localhost:5000/cats-app:${{ github.sha }}
        docker push localhost:5000/cats-app:${{ github.sha }}

    - name: Deploy application
      run: |
        # Apply deployment if not exists
        if ! kubectl get deployment cats-app; then
          kubectl create deployment cats-app --image=localhost:5000/cats-app:${{ github.sha }} --port=8000
        fi
        
        # Zero-downtime update
        kubectl set image deployment/cats-app cats-app=localhost:5000/cats-app:${{ github.sha }} --record
        kubectl rollout status deployment/cats-app --timeout=300s

    - name: Expose service
      run: |
        if ! kubectl get svc cats-app; then
          kubectl expose deployment cats-app --type=NodePort --port=80 --target-port=8000
        fi

    - name: Verify deployment
      run: |
        kubectl get deployments -o wide
        kubectl get pods -o wide
        kubectl get svc -o wide
        minikube service cats-app --url