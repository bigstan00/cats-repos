name: Deploy Cats App to Minikube

on:
  push:
    branches:
      - master
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: self-hosted

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Cache kubectl
      id: cache-kubectl
      uses: actions/cache@v3
      with:
        path: /usr/local/bin/kubectl
        key: kubectl-${{ runner.os }}

    - name: Set up kubectl
      if: steps.cache-kubectl.outputs.cache-hit != 'true'
      run: |
        KUBEVERSION=$(curl -sSL https://dl.k8s.io/release/stable.txt)
        echo "Using Kubernetes version: $KUBEVERSION"
        curl -LO "https://dl.k8s.io/release/${KUBEVERSION}/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/
        kubectl version --client

    - name: Set KUBECONFIG
      run: |
        export KUBECONFIG=$HOME/.kube/config
        echo "KUBECONFIG=$KUBECONFIG" >> $GITHUB_ENV

    - name: Use Minikube Docker daemon
      run: |
        eval $(minikube docker-env)
        echo "DOCKER_HOST=$DOCKER_HOST" >> $GITHUB_ENV

    - name: Build Docker image inside Minikube
      run: |
        docker build -t bigstan00/cats:${{ github.sha }} .

    # No push needed â€” image is already in Minikube's Docker daemon

    - name: Deploy to Minikube
      run: |
        kubectl set image deployment/cats-app cats=bigstan00/cats:${{ github.sha }} || kubectl create deployment cats-app --image=bigstan00/cats:${{ github.sha }}
        kubectl rollout status deployment/cats-app

    - name: Expose service if not already exposed
      run: |
        if ! kubectl get svc cats-app; then
          kubectl expose deployment cats-app --port=80 --target-port=8000 --type=NodePort
        fi

    - name: Verify Deployment
      run: |
        kubectl get pods -o wide
        kubectl get svc cats-app
